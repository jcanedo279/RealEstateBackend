services:
  backend:
    build:
      context: .
      args:
        CELERY_USER: "${CELERY_USER}"
        CELERY_UID: "${CELERY_UID}"
    image: "${BACKEND_CONTAINER_NAME}"
    container_name: "${BACKEND_CONTAINER_NAME}"
    expose:
      - "${PORT_BACKEND}:${PORT_BACKEND}"
    volumes:
      - .:/app
      - ./src/migrations:/app/src/migrations  # Mapping the migrations folder to a local folder.
    env_file:
      - .env
    networks:
      - app-network
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_CONTAINER_NAME}:${PORT_DATABASE}/${DATABASE_NAME}
    depends_on:
      - database
      - rabbitmq

  worker:
    build:
      context: .
      args:
        CELERY_USER: "${CELERY_USER}"
        CELERY_UID: "${CELERY_UID}"
    image: application-backend:latest
    command: celery -A app.celery worker --loglevel=info
    user: "${CELERY_UID}:${CELERY_UID}"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - rabbitmq
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_ERLANG_COOKIE: "${RABBITMQ_ERLANG_COOKIE}"
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    ports:
      - "${RABBITMQ_MI_PORT}:${RABBITMQ_MI_PORT}"
      - "${RABBITMQ_SERVER_PORT}:${RABBITMQ_SERVER_PORT}"
    env_file:
      - .env
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "${PORT_NGINX}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - app-network

  database:
    image: postgres:latest
    container_name: "${DATABASE_CONTAINER_NAME}"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${DATABASE_NAME}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5433:${PORT_DATABASE}"
    restart: always

volumes:
  pgdata:
      
networks:
  app-network:
    driver: bridge
    name: app-network
